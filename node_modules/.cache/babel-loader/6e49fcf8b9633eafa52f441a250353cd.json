{"ast":null,"code":"var _jsxFileName = \"/home/giangth/react-todo-1/src/App.js\";\nimport React, { Component } from 'react';\nimport { fromJS } from \"immutable\";\nimport './App.scss';\nimport Column from './Component/Column/Column';\nimport AddNewTask from './Component/AddNewTask/AddNewTask';\nimport Task from './Component/Task/Task';\nimport toastr from 'toastr';\nimport 'toastr/build/toastr.min.css';\nimport uuidv1 from 'uuid/v1';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      display: false,\n      columns: fromJS([{\n        id: 'td',\n        title: 'TO DO',\n        tasks: []\n      }, {\n        id: 'ip',\n        title: 'IN PROGRESS',\n        tasks: []\n      }, {\n        id: 'de',\n        title: 'DONE',\n        tasks: []\n      }]),\n      selectedColumn: '',\n      taskContent: ''\n    };\n\n    this.ToggleNewTask = (idColumn = '') => () => {\n      this.setState(prevState => ({\n        selectedColumn: idColumn,\n        display: !prevState.display\n      }));\n    };\n\n    this.handleChangeTaskContent = e => this.setState({\n      taskContent: e.target.value\n    });\n\n    this.handleChangeSelectedColumn = selectedColumn => () => {\n      this.setState({\n        selectedColumn: selectedColumn\n      });\n    };\n\n    this.handleAddTask = () => {\n      const {\n        taskContent\n      } = this.state;\n\n      if (taskContent.trim() === '') {\n        return toastr.warning('Plesae enter input', 'Notice', {\n          timeout: 2000\n        });\n      } else {\n        const {\n          selectedColumn,\n          columns\n        } = this.state;\n        const newTask = fromJS({\n          id: uuidv1(),\n          content: taskContent,\n          time: new Date().toLocaleString()\n        });\n        const columnIndex = columns.findIndex(column => column.get('id') === selectedColumn);\n        const updatedColumn = columns.updateIn([columnIndex, 'tasks'], tasks => tasks.push(newTask));\n        this.setState({\n          display: false,\n          selectedColumn: '',\n          taskContent: '',\n          columns: fromJS(updatedColumn)\n        });\n      }\n\n      ;\n    };\n\n    this.handleDeleteTask = () => {};\n  }\n\n  render() {\n    const {\n      columns,\n      display,\n      taskContent\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"To Do List\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, columns.map(column => /*#__PURE__*/React.createElement(Column, {\n      key: column.get('id'),\n      column: column,\n      ToggleNewTask: this.ToggleNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minHeight: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, column.get('tasks').map(task => /*#__PURE__*/React.createElement(Task, {\n      key: task.get('id'),\n      task: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }))))), display && /*#__PURE__*/React.createElement(AddNewTask, {\n      ToggleNewTask: this.ToggleNewTask(),\n      selectedColumn: this.state.selectedColumn,\n      handleChangeSelectedColumn: this.handleChangeSelectedColumn,\n      taskContent: taskContent,\n      handleChangeTaskContent: this.handleChangeTaskContent,\n      handleAddTask: this.handleAddTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/giangth/react-todo-1/src/App.js"],"names":["React","Component","fromJS","Column","AddNewTask","Task","toastr","uuidv1","App","state","display","columns","id","title","tasks","selectedColumn","taskContent","ToggleNewTask","idColumn","setState","prevState","handleChangeTaskContent","e","target","value","handleChangeSelectedColumn","handleAddTask","trim","warning","timeout","newTask","content","time","Date","toLocaleString","columnIndex","findIndex","column","get","updatedColumn","updateIn","push","handleDeleteTask","render","map","minHeight","task"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport {fromJS} from \"immutable\";\nimport './App.scss';\nimport Column from './Component/Column/Column';\nimport AddNewTask from './Component/AddNewTask/AddNewTask';\nimport Task from './Component/Task/Task';\nimport toastr from 'toastr';\nimport 'toastr/build/toastr.min.css';\nimport uuidv1 from 'uuid/v1'\n\nclass App extends Component {\n    state = {\n        display: false,\n        columns: fromJS([\n            {id: 'td', title: 'TO DO', tasks: []},\n            {id: 'ip', title: 'IN PROGRESS', tasks: []},\n            {id: 'de', title: 'DONE', tasks: []}\n        ]),\n        selectedColumn: '',\n        taskContent: '',\n    };\n\n    ToggleNewTask = (idColumn = '') => () => {\n        this.setState(prevState => ({\n            selectedColumn: idColumn,\n            display: !prevState.display,\n        }));\n    };\n    handleChangeTaskContent = (e) => this.setState({taskContent: e.target.value});\n    handleChangeSelectedColumn = (selectedColumn) => () => {\n        this.setState({selectedColumn: selectedColumn})\n    };\n    handleAddTask = () => {\n        const {taskContent} = this.state;\n        if (taskContent.trim() === '') {\n            return toastr.warning('Plesae enter input', 'Notice', {timeout: 2000});\n        } else {\n            const {selectedColumn, columns} = this.state;\n            const newTask = fromJS({\n                id: uuidv1(),\n                content: taskContent,\n                time: new Date().toLocaleString()\n            });\n            const columnIndex = columns.findIndex(column => column.get('id') === selectedColumn);\n            const updatedColumn = columns.updateIn(\n                [columnIndex, 'tasks'],\n                tasks => tasks.push(newTask)\n            );\n            this.setState({\n                display: false,\n                selectedColumn: '',\n                taskContent: '',\n                columns: fromJS(updatedColumn)\n            });\n        }\n        ;\n\n    };\n    handleDeleteTask= ()=>{\n        \n    }\nrender(){\n    const {columns , display,taskContent} = this.state;\n\n    return(\n        <div className=\"App\">\n        <h1 className=\"App__title\">\n            To Do List\n        </h1>\n            <div className=\"App__content\">\n                {\n                    columns.map(column => (\n                        <Column key={column.get('id')} column={column} ToggleNewTask={this.ToggleNewTask}>\n                            <div style={{ minHeight: '300px' }}>\n                                {column.get('tasks').map(task =>(\n                                    <Task key={task.get('id')} task={task} />\n                                ))}\n                            </div>\n                        </Column>\n                    ))\n                }\n                {\n                    display  &&\n                    <AddNewTask ToggleNewTask={this.ToggleNewTask()}\n                                selectedColumn={this.state.selectedColumn}\n                                handleChangeSelectedColumn={this.handleChangeSelectedColumn}\n                                taskContent={taskContent}\n                                handleChangeTaskContent={this.handleChangeTaskContent}\n                                handleAddTask = {this.handleAddTask}\n                    />}\n            </div>\n        </div>\n    )\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}